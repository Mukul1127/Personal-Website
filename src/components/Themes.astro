---
/*
  Mukul's Personal Website is a Website
  Copyright (C) 2025 Mukul Kedia

  Mukul's Personal Website is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published
  by the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  Mukul's Personal Website is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with Mukul's Personal Website. If not, see <https://www.gnu.org/licenses/>.
*/

const themes = [
  "MKLIGHT",
  "MKLED",
  "abyss",
  "acid",
  "aqua",
  "autumn",
  "black",
  "bumblebee",
  "business",
  "caramellatte",
  "cmyk",
  "coffee",
  "corporate",
  "cupcake",
  "cyberpunk",
  "dark",
  "dim",
  "dracula",
  "emerald",
  "fantasy",
  "forest",
  "garden",
  "halloween",
  "lemonade",
  "light",
  "lofi",
  "luxury",
  "night",
  "nord",
  "pastel",
  "retro",
  "silk",
  "sunset",
  "synthwave",
  "valentine",
  "winter",
  "wireframe",
];

import swatchbook from "@/assets/fontawesome/swatchbook.svg?raw";
import check from "@/assets/check.svg?raw";
---

<themes->
  <div class="dropdown dropdown-end">
    <div tabindex="0" role="button" class="btn btn-ghost" data-themes={JSON.stringify(themes)}>
      <div set:html={swatchbook} class="size-4 fill-current" />
      <p class="hidden sm:block">Theme Changer</p>
    </div>
    <ul tabindex="0" class="dropdown-content rounded-box bg-base-300 border-neutral max-h-[30.9rem] w-64 space-y-3 overflow-y-auto border-(length:--border) p-3 shadow-xl">
      {
        themes.map((theme) => (
          <button data-theme={theme} class="btn bg-base-100 btn-lg w-full py-3.5 text-left transition-transform hover:scale-105" type="button">
            <input type="radio" class="theme-controller peer hidden" name="theme-buttons" value={theme} />
            <div set:html={check} class="invisible size-3.5 shrink-0 fill-current peer-checked:visible" />
            <span class="grow pl-1 text-sm font-semibold">{theme.charAt(0).toUpperCase() + theme.slice(1)}</span>
            <span class="flex h-full shrink-0 flex-wrap gap-1">
              <span class="rounded-selector bg-primary w-2" />
              <span class="rounded-selector bg-secondary w-2" />
              <span class="rounded-selector bg-accent w-2" />
              <span class="rounded-selector bg-neutral w-2" />
            </span>
          </button>
        ))
      }
    </ul>
  </div>
</themes->

<script>
  class Themes extends HTMLElement {
    connectedCallback(): void {
      const themes: string = JSON.parse(this.querySelector<HTMLElement>("[data-themes]")!.dataset.themes!);
      const currentTheme: string | null = localStorage.getItem("theme");

      const defaultLightTheme = "MKLIGHT";
      const defaultDarkTheme = "MKLED";

      if (currentTheme) {
        if (themes.includes(currentTheme)) this.setTheme(currentTheme);
        else {
          if (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches) this.setTheme(defaultDarkTheme);
          else this.setTheme(defaultLightTheme);
        }
      } else {
        if (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches) this.setTheme(defaultDarkTheme);
        else this.setTheme(defaultLightTheme);
      }

      const themeOptions: NodeListOf<HTMLButtonElement> = this.querySelectorAll<HTMLButtonElement>("[data-theme]");
      themeOptions.forEach((themeOption: HTMLButtonElement) => {
        themeOption.addEventListener("click", () => {
          this.setTheme(themeOption.dataset.theme!);
        });
      });
    }

    setTheme(theme: string): void {
      localStorage.setItem("theme", theme);
      this.querySelector(`button[data-theme="${theme}"]`)!.querySelector("input")!.checked = true;
      if (["MKLED", "abyss", "aqua", "black", "business", "coffee", "dark", "dim", "dracula", "forest", "halloween", "luxury", "night", "sunset", "synthwave"].includes(theme))
        document.documentElement.setAttribute("data-dark", "true");
      else document.documentElement.setAttribute("data-dark", "false");
    }
  }

  customElements.define("themes-", Themes);
</script>

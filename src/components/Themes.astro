---
/*
  Mukul's Personal Website is a Personal Website 
  Copyright (C) 2024 Mukul Kedia

  Mukul's Personal Website is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published
  by the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  Mukul's Personal Website is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with Mukul's Personal Website. If not, see <https://www.gnu.org/licenses/>.
*/

import tailwindConfig from "tailwind.config";

const themes = tailwindConfig.daisyui.themes.map((item) =>
  typeof item === "object" ? Object.keys(item)[0] : item
) as string[];

import themeicon from "@/assets/themeicon.svg?raw";
---

<div class="z-50 dropdown dropdown-end">
  <div role="button" tabindex="0" class="flex gap-2 btn btn-ghost">
    <div class="w-5 h-5">
      <Fragment set:html={themeicon} />
    </div>
    <p class="hidden md:block">Theme Changer</p>
  </div>
  <div title="Change Theme" class="dropdown-content">
    <div tabindex="0" class="bg-base-200 rounded-box h-[28.6rem] max-h-[calc(100vh-10rem)] w-64 overflow-y-auto border border-white/5 shadow-2xl outline outline-1 outline-black/5">
      <div class="grid grid-cols-1 gap-3 p-3 font-sans">
        {
          themes.map((theme) => (
            <button id={theme} data-theme={theme} class="flex items-center gap-3 px-4 py-3 text-left transition-transform theme-option rounded-btn hover:scale-105" type="button">
              <svg id={`${theme}-svg`} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="invisible w-3 h-3 shrink-0">
                <path d="M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z" />
              </svg>
              <span class="flex-grow text-sm font-medium">{theme === "mukuls" ? "Mukul's" : theme[0]!.toUpperCase() + theme.substring(1)}</span>
              <span class="flex flex-wrap h-full gap-1 shrink-0">
                <span class="w-2 bg-primary rounded-badge" />
                <span class="w-2 bg-secondary rounded-badge" />
                <span class="w-2 bg-accent rounded-badge" />
                <span class="w-2 bg-neutral rounded-badge" />
              </span>
            </button>
          ))
        }
      </div>
    </div>
  </div>
</div>

<script>
  function setup() {
    if (localStorage.getItem("theme") === null) setTheme("mukuls");
    else setTheme(localStorage.getItem("theme")!);

    const themeOptions = document.getElementsByClassName("theme-option");

    for (const themeOption of themeOptions) {
      themeOption.addEventListener("click", () => {
        document.getElementById(`${localStorage.getItem("theme")}-svg`)!.classList.add("invisible");
        setTheme(themeOption.id);
      });
    }
  }

  function setTheme(theme: string) {
    if (["mukuls", "dark", "synthwave", "halloween", "forest", "aqua", "black", 
        "luxury", "dracula", "business", "night", "coffee", "dim", "sunset"].includes(theme)) document.documentElement.setAttribute("data-dark", "true");
    else document.documentElement.setAttribute("data-dark", "false");
    document.documentElement.setAttribute("data-theme", theme);
    document.getElementById(`${theme}-svg`)!.classList.remove("invisible");
    localStorage.setItem("theme", theme);
  }

  document.addEventListener("astro:after-swap", setup);
  setup();
</script>